geom_line(data=summary.light_wood,
aes(x=set_size, y=meanRT, group=interaction(sbj, config_type), color=config_type),
linetype="dotted", alpha=0.5)+
geom_ribbon(data=eff.light_wood,aes(x=x,ymin=conf.low,ymax=conf.high,fill=group),alpha=0.3, show.legend=F)+
geom_line(data=eff.light_wood,aes(x=x,y=predicted,color=group), lwd=1)+
facet_wrap(~target_present)+theme_minimal()
plot(plt.light_wood)
# individual slopes
sbj_list <- unique(search.final$sbj)
config_list <- c("oneDim-feature","twoDim-feature","twoDim-conjunction","twoDim-diagnoal")
fit_result <-c()
for (i in sbj_list){
for (c in config_list){
for (t in c(0,1)){
curr_df <- search.final %>%
filter(sbj==i & config_type==c & target_present==t)
mdl.indi <- lm(rt~set_size, data=curr_df)
fit_result <- rbind(fit_result, c(i, unique(curr_df$space_type), c, t, mdl.indi$coefficients))
}
}
}
colnames(fit_result) <-c("sbj","space_type","config_type","target_present", "fit_intercept", "fit_slope")
fit_result <- as.data.frame(fit_result) %>%
mutate(fit_intercept=as.numeric(fit_intercept),
fit_slope=as.numeric(fit_slope))
fit_result$config_type<-factor(fit_result$config_type,
c("oneDim-feature","twoDim-feature","twoDim-conjunction","twoDim-diagnoal"))
# config_type * space_type
mdl.indi_slope <- lmer(fit_slope ~ config_type*space_type+(1|sbj),
data = filter(fit_result, target_present=="0"))
anova(mdl.indi_slope)
plt.indi_slope <- filter(fit_result, target_present=="0") %>%
ggplot(aes(x=config_type, y=fit_slope, fill=config_type, color=config_type))+
geom_jitter()+
geom_boxplot(alpha=0.2)+
facet_wrap(~space_type)
print(plt.indi_slope)
search.raw_inverted <- read_csv("raw_data_prolific_inverted_n40.csv", show_col_types=F)
search.inverted <- search.raw_inverted %>%
filter(round>1) %>% # exclude the first block (practice)
mutate(response=case_when(response=="y"~"1",response=="n"~"0"), # for the psychophysics version
correct=case_when(response==target_present~T, response!=target_present~F),
rt = as.numeric(rt)-1000) %>% # subtracting the mask duration
mutate(response=as.factor(response),
stim_set=as.factor(stim_set),
space_type=as.factor(space_type),
disp_type=as.factor(disp_type),
config_dir = as.factor(config_dir),
config_dim = as.factor(config_dim),
config_type = as.factor(config_type))
search.inverted$config_type<-factor(search.inverted$config_type,
c("oneDim-feature","twoDim-feature","twoDim-conjunction","twoDim-diagnoal"))
summary(search.inverted)
# 1. RT threshold
hist(search.inverted$rt)
rt.h_thresh <- mean(search.inverted$rt, na.rm=T) + 3*sd(search.inverted$rt, na.rm=T)
rt.l_thresh <- 150
# 2. SBJ with too many extreme RTs & low accuracy
desc.inverted <- search.inverted %>%
group_by(sbj) %>%
summarise(badRT=mean(rt<rt.l_thresh | rt > rt.h_thresh, na.rm=T),
meanRT = mean(rt, na.rm=T),
acc=mean(correct==T, na.rm=T),
n_na=sum(is.na(response)))
exc1.inverted <- desc.inverted %>% filter(badRT>0.15)
exc2.inverted <- desc.inverted %>% filter(acc<0.5)
search.final_inverted <- search.inverted %>%
filter(!(sbj %in% exc1$sbj)) %>%
filter(!(sbj %in% exc2$sbj)) %>%
filter(correct==T) %>%
filter(rt>rt.l_thresh & rt<rt.h_thresh)
summary(search.final_inverted)
n_sbj_inverted <- search.final_inverted %>%
group_by(space_type) %>%
summarise(n_sbj=length(unique(sbj)))
mdl.light_layout_inverted <-
lmer(rt ~ target_present*set_size*config_type+(1|sbj),
data= filter(search.final_inverted, space_type=='lighting-layout'),
control=opts.l)
anova(mdl.light_layout_inverted)
eff.light_layout_inverted <-
ggemmeans(mdl.light_layout_inverted, terms=c('set_size','config_type','target_present')) %>%
rename(target_present=facet)
#sbj-level summary
summary.light_layout_inverted <- search.final_inverted %>%
filter(space_type=='lighting-layout') %>%
group_by(sbj, set_size, config_type, target_present) %>%
summarise(meanRT = mean(rt))
plt.light_layout_inverted <- ggplot()+
geom_line(data=summary.light_layout_inverted,
aes(x=set_size, y=meanRT, group=interaction(sbj, config_type), color=config_type),
linetype="dotted", alpha=0.5)+
geom_ribbon(data=eff.light_layout_inverted,
aes(x=x,ymin=conf.low,ymax=conf.high,fill=group),alpha=0.3, show.legend=F)+
geom_line(data=eff.light_layout_inverted, aes(x=x,y=predicted,color=group),lwd=1)+
facet_wrap(~target_present)+theme_minimal()
plot(plt.light_layout_inverted)
mdl.light_wood_inverted <-
lmer(rt ~ target_present*set_size*config_type+(1|sbj),
data= filter(search.final_inverted, space_type=='lighting-wood'),
control=opts.l)
anova(mdl.light_wood_inverted)
eff.light_wood_inverted <-
ggemmeans(mdl.light_wood_inverted,terms=c('set_size','config_type','target_present')) %>%
rename(target_present=facet)
#sbj-level summary
summary.light_wood_inverted <- search.final_inverted %>%
filter(space_type=='lighting-wood') %>%
group_by(sbj, set_size, config_type, target_present) %>%
summarise(meanRT = mean(rt))
plt.light_wood_inverted <- ggplot()+
geom_line(data=summary.light_wood_inverted,
aes(x=set_size, y=meanRT, group=interaction(sbj, config_type), color=config_type),
linetype="dotted", alpha=0.5)+
geom_ribbon(data=eff.light_wood_inverted,
aes(x=x,ymin=conf.low,ymax=conf.high,fill=group),alpha=0.3, show.legend=F)+
geom_line(data=eff.light_wood_inverted,aes(x=x,y=predicted,color=group), lwd=1)+
facet_wrap(~target_present)+theme_minimal()
plot(plt.light_wood_inverted)
# individual slopes
sbj_list <- unique(search.final_inverted$sbj)
config_list <- c("oneDim-feature","twoDim-feature","twoDim-conjunction","twoDim-diagnoal")
fit_result <-c()
for (i in sbj_list){
for (c in config_list){
for (t in c(0,1)){
curr_df <- search.final_inverted %>%
filter(sbj==i & config_type==c & target_present==t)
mdl.indi <- lm(rt~set_size, data=curr_df)
fit_result <- rbind(fit_result, c(i, unique(curr_df$space_type), c, t, mdl.indi$coefficients))
}
}
}
colnames(fit_result) <-c("sbj","space_type","config_type","target_present", "fit_intercept", "fit_slope")
fit_result <- as.data.frame(fit_result) %>%
mutate(fit_intercept=as.numeric(fit_intercept),
fit_slope=as.numeric(fit_slope))
fit_result$config_type<-factor(fit_result$config_type,
c("oneDim-feature","twoDim-feature","twoDim-conjunction","twoDim-diagnoal"))
# config_type * space_type
mdl.indi_slope <- lmer(fit_slope ~ config_type*space_type+(1|sbj),
data = filter(fit_result, target_present=="0"))
anova(mdl.indi_slope)
plt.indi_slope <- filter(fit_result, target_present=="0") %>%
ggplot(aes(x=config_type, y=fit_slope, fill=config_type, color=config_type))+
geom_jitter()+
geom_boxplot(alpha=0.2)+
facet_wrap(~space_type)
print(plt.indi_slope)
desc.upright$exp_type <- "upright"
desc.inverted$exp_type <- "inverted"
desc.upright_incl <- desc.upright %>%
filter(!(sbj %in% exc1$sbj)) %>% filter(!(sbj %in% exc2$sbj))
desc.inverted_incl <- desc.inverted %>%
filter(!(sbj %in% exc1.inverted$sbj)) %>% filter(!(sbj %in% exc2.inverted$sbj))
# accuracy comparison
diff.acc <- t.test(desc.upright_incl$acc, desc.inverted_incl$acc)
diff.rt <- t.test(desc.upright_incl$meanRT, desc.inverted_incl$meanRT)
print(diff.acc)
print(diff.rt)
desc.all <- rbind(desc.upright_incl, desc.inverted_incl)
plt.acc_comp <- desc.all %>% ggplot()+
geom_jitter(aes(x=exp_type, y=acc))+
geom_boxplot(aes(x=exp_type, y=acc), alpha=0.4)
plot(plt.acc_comp)
plt.rt_comp <- desc.all %>% ggplot()+
geom_jitter(aes(x=exp_type, y=meanRT))+
geom_boxplot(aes(x=exp_type, y=meanRT), alpha=0.4)
plot(plt.rt_comp)
desc.upright_early <- search %>%
group_by(sbj) %>%
filter(round==2) %>%
summarise(badRT=mean(rt<rt.l_thresh | rt > rt.h_thresh, na.rm=T),
meanRT = mean(rt, na.rm=T),
acc=mean(correct==T, na.rm=T),
n_na=sum(is.na(response))) %>%
filter(!(sbj %in% exc1$sbj)) %>%
filter(!(sbj %in% exc2$sbj))
desc.inverted_early <- search.inverted %>%
group_by(sbj) %>%
filter(round==2) %>%
summarise(badRT=mean(rt<rt.l_thresh | rt > rt.h_thresh, na.rm=T),
meanRT = mean(rt, na.rm=T),
acc=mean(correct==T, na.rm=T),
n_na=sum(is.na(response))) %>%
filter(!(sbj %in% exc1.inverted$sbj)) %>%
filter(!(sbj %in% exc2.inverted))
desc.upright_early$exp_type <- "upright"
desc.inverted_early$exp_type <- "inverted"
# t-test
diff.acc <- t.test(desc.upright_early$acc, desc.inverted_early$acc)
diff.rt <- t.test(desc.upright_early$meanRT, desc.inverted_early$meanRT)
print(diff.acc)
print(diff.rt)
plot
desc.all_early <- rbind(desc.upright_early, desc.inverted_early)
plt.acc_comp_early <- desc.all_early %>% ggplot()+
geom_jitter(aes(x=exp_type, y=acc))+
geom_boxplot(aes(x=exp_type, y=acc), alpha=0.4)
plot(plt.acc_comp_early)
plt.rt_comp_early <- desc.all_early %>% ggplot()+
geom_jitter(aes(x=exp_type, y=meanRT))+
geom_boxplot(aes(x=exp_type, y=meanRT), alpha=0.4)
plot(plt.rt_comp_early)
library(cowplot)
lumicont<-read.csv("lumicont.csv")
lumicont <- lumicont %>%
mutate(config_rough = case_when(img_type=='tm'~'conjunction',
img_type=='ml'~'conjunction',
img_type=='mr'~'conjunction',
img_type=='bm'~'conjunction',
img_type=='trg'~'target',
T~'non-conjunction'))
plt.lumi_layout <- filter(lumicont, room_type=="bedroom11_ver4_d0.5") %>%
ggplot(aes(x=img_type, y=aveLumi, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-layout space")
plt.lumi_wood <- filter(lumicont, room_type=="bedroom5_ver4") %>%
ggplot(aes(x=img_type, y=aveLumi, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-wood space")
plot_grid(plt.lumi_layout, plt.lumi_wood)
plt.cont_layout <- filter(lumicont, room_type=="bedroom11_ver4_d0.5") %>%
ggplot(aes(x=img_type, y=RMSCont, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-layout space")
plt.cont_wood <- filter(lumicont, room_type=="bedroom5_ver4") %>%
ggplot(aes(x=img_type, y=RMSCont, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-wood space")
plot_grid(plt.cont_layout, plt.cont_wood)
source("func_mk_cond.R")
tmp_cond <- func_mk_cond()
View(tmp_cond)
source("func_mk_cond.R")
tmp_cond <- func_mk_cond()
View(lumicont)
View(nt_coords)
t_nts <- nt_coords
# get img index
img_number <- lapply(1:length(t_nts),
function(n){which(img_coord_list==t_nts[n])})
20*25+3
View(img_coord_list)
source("func_mk_cond.R")
tmp_cond <- func_mk_cond()
View(tmp_cond)
library(cowplot)
lumicont<-read.csv("lumicont.csv")
lumicont <- lumicont %>%
mutate(config_rough = case_when(img_type=='tm'~'conjunction',
img_type=='ml'~'conjunction',
img_type=='mr'~'conjunction',
img_type=='bm'~'conjunction',
img_type=='trg'~'target',
T~'non-conjunction'))
plt.lumi_layout <- filter(lumicont, room_type=="bedroom11_ver4_d0.5") %>%
ggplot(aes(x=img_type, y=aveLumi, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-layout space")
plt.lumi_wood <- filter(lumicont, room_type=="bedroom5_ver4") %>%
ggplot(aes(x=img_type, y=aveLumi, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-wood space")
plot_grid(plt.lumi_layout, plt.lumi_wood)
plt.cont_layout <- filter(lumicont, room_type=="bedroom11_ver4_d0.5") %>%
ggplot(aes(x=img_type, y=RMSCont, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-layout space")
plt.cont_wood <- filter(lumicont, room_type=="bedroom5_ver4") %>%
ggplot(aes(x=img_type, y=RMSCont, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-wood space")
plot_grid(plt.cont_layout, plt.cont_wood)
library(cowplot)
lumicont<-read.csv("lumicont.csv")
lumicont <- lumicont %>%
mutate(config_rough = case_when(img_type=='tm'~'conjunction',
img_type=='ml'~'conjunction',
img_type=='mr'~'conjunction',
img_type=='bm'~'conjunction',
img_type=='trg'~'target',
T~'non-conjunction'))
plt.lumi_layout <- filter(lumicont, room_type=="bedroom11_ver4_d0.5") %>%
ggplot(aes(x=img_type, y=aveLumi, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-layout space")
plt.lumi_wood <- filter(lumicont, room_type=="bedroom5_ver4") %>%
ggplot(aes(x=img_type, y=aveLumi, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-wood space")
plot_grid(plt.lumi_layout, plt.lumi_wood)
plt.cont_layout <- filter(lumicont, room_type=="bedroom11_ver4_d0.5") %>%
ggplot(aes(x=img_type, y=RMSCont, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-layout space")
plt.cont_wood <- filter(lumicont, room_type=="bedroom5_ver4") %>%
ggplot(aes(x=img_type, y=RMSCont, color=config_rough))+
geom_line()+
geom_jitter()+
ggtitle("light-wood space")
plot_grid(plt.cont_layout, plt.cont_wood)
View(tmp_cond)
range(nrow(tmp_cond))
for(i in range(nrow(tmp_cond))){
print(i)
}
source("func_mk_cond.R")
tmp_cond <- func_mk_cond()
for(i in range(1,nrow(tmp_cond))){
print(i)
}
for(i in seq(1,nrow(tmp_cond))){
print(i)
}
tmp_row <- tem_cond[i,]
i=1
tmp_row <- tmp_cond[i,]
View(tmp_row)
tmp_row <- tmp_cond[i,'i_idx1':'i_idx8']
source("func_mk_cond.R")
tmp_cond <- func_mk_cond()
tmp_row <- tmp_cond[i,'i_idx1':'i_idx8']
tmp_row <- tmp_cond[i,]
tmp_row <- tmp_cond[i,] %>% select(starts_with("i_idx"))
View(tmp_row)
tmp_row <- tmp_cond[i,] %>% select(starts_with("i_idx")) %>% as.numeric()
curr_lum <- lumicont[img==curr_row]
curr_lum <- lumicont %>% filter(img == curr_row)
curr_lum <- lumicont %>% filter(img == curr_row, na.rm=T)
curr_lum <- lumicont %>% filter(img == curr_row, na.rm==T)
curr_row <- tmp_cond[i,] %>% select(starts_with("i_idx")) %>% as.numeric()
curr_lum <- lumicont %>% filter(img == curr_row, na.rm==)
curr_lum <- lumicont %>% filter(img == curr_row, na.rm=T)
curr_lum <- lumicont %>% filter(img == curr_row, na.rm==T)
curr_lum <- lumicont %>% filter(img == curr_row)
View(curr_lum)
curr_lum <- lumicont %>% filter(img == curr_row[1])
View(curr_lum)
curr_row <- tmp_cond[i,] %>% select(starts_with("i_idx"))
curr_row <- tmp_cond[i,] %>% select(starts_with("i_idx")) %>% as.numeric()
View(lumicont)
# light-layout space
curr_lum <- lumicont %>% filter(room_type = "bedroom11_ver4_d0.5",
img == curr_row[1])
# light-layout space
curr_lum <- lumicont %>% filter(room_type = "bedroom11_ver4_d0.5",
img == curr_row[1])
# light-layout space
curr_lum <- lumicont %>% filter(room_type=="bedroom11_ver4_d0.5",
img == curr_row[1])
View(curr_lum)
length(curr_row, na.rm==T)
length(curr_row, na.rm=T)
length(curr_row)
length(is.na(curr_row))
is.na(curr_row)
sum(!is.na(curr_row))
View(tmp_cond)
tmp_cond <- func_mk_cond() %>% filter(target_ox==1)
curr_row <- tmp_cond[i,]
seq(1, curr_row$set_size)
curr_setsize <- tmp_cond$set_size[i,]
curr_setsize <- tmp_cond$set_size[i]
curr_imgs <- tmp_cond[i,] %>% select(starts_with('i_idx')) %>% as.numeric
seq(1, curr_setsize)
curr_imgs <- tmp_cond[i,] %>% select(starts_with('i_idx')) %>% as.numeric
# luminance: light-layout space
light_layout_lum <- tibble("T"=NA, "D1"=NA, "D2"=NA, "D3"=NA, "D4"=NA, "D5"=NA, "D6"=NA, "D7"=NA)
for(j in seq(1, curr_setsize)){
light_layout_lum[i,j] <- lumicont %>% filter(img == curr_imgs[j],room_type=="bedroom11_ver4_d0.5")
}
j
# luminance: light-layout space
light_layout_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
View(light_layout_lum)
for(j in seq(1, curr_setsize)){
light_layout_lum[i,j] <- lumicont %>% filter(img == curr_imgs[j],room_type=="bedroom11_ver4_d0.5")
}
j
img == curr_imgs[j]
curr_imgs[j]
light_layout_lum[i,j] <- lumicont %>% filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5")
lumicont %>% filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5")
# luminance: light-layout space
for(j in seq(1, curr_setsize)){
light_layout_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi)
}
lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi)
light_layout_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_layout_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi)
View(light_layout_lum)
lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi) %>% as.numeric()
light_layout_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_layout_cont <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
# luminance: light-layout space
for(j in seq(1, curr_setsize)){
light_layout_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi) %>% as.numeric()
}
for(i in seq(1,nrow(tmp_cond))){
curr_setsize <- tmp_cond$set_size[i]
curr_imgs <- tmp_cond[i,] %>% select(starts_with('i_idx')) %>% as.numeric
for(j in seq(1, curr_setsize)){
# light-layout space
light_layout_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi) %>% as.numeric()
light_layout_cont[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(RMSCont) %>% as.numeric()
# light-wood space
light_wood_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom5_ver4") %>%
select(aveLumi) %>% as.numeric()
light_layout_cont[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom5_ver4") %>%
select(RMSCont) %>% as.numeric()
}
}
# prepare empty df
light_layout_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_layout_cont <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_wood_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_wood_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_wood_cont <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
for(i in seq(1,nrow(tmp_cond))){
curr_setsize <- tmp_cond$set_size[i]
curr_imgs <- tmp_cond[i,] %>% select(starts_with('i_idx')) %>% as.numeric
for(j in seq(1, curr_setsize)){
# light-layout space
light_layout_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi) %>% as.numeric()
light_layout_cont[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(RMSCont) %>% as.numeric()
# light-wood space
light_wood_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom5_ver4") %>%
select(aveLumi) %>% as.numeric()
light_layout_cont[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom5_ver4") %>%
select(RMSCont) %>% as.numeric()
}
}
i=17
curr_setsize <- tmp_cond$set_size[i]
curr_imgs <- tmp_cond[i,] %>% select(starts_with('i_idx')) %>% as.numeric
source("func_mk_cond.R")
tmp_cond <- func_mk_cond() %>% filter(target_ox==1)
# prepare empty df
light_layout_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_layout_cont <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_wood_lum <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
light_wood_cont <- matrix(data=NA, nrow=nrow(tmp_cond), ncol=8)
for(i in seq(1,nrow(tmp_cond))){
curr_setsize <- tmp_cond$set_size[i]
curr_imgs <- tmp_cond[i,] %>% select(starts_with('i_idx')) %>% as.numeric
for(j in seq(1, curr_setsize)){
# light-layout space
light_layout_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(aveLumi) %>% as.numeric()
light_layout_cont[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom11_ver4_d0.5") %>%
select(RMSCont) %>% as.numeric()
# light-wood space
light_wood_lum[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom5_ver4") %>%
select(aveLumi) %>% as.numeric()
light_layout_cont[i,j] <- lumicont %>%
filter(img == curr_imgs[j] & room_type=="bedroom5_ver4") %>%
select(RMSCont) %>% as.numeric()
}
}
# formatting matrix to df
light_layout_lum <- as.data.frame(light_layout_lum) %>%
cbind(tmp_cond$type)
View(light_layout_lum)
colnames(light_layout_lum) <- c('target','nt1','nt2','nt3','nt4','nt5','nt6','nt7','space_type')
light_layout_cont <- as.data.frame(light_layout_cont) %>%
cbind(tmp_cond$type)
colnames(light_layout_cont) <- c('target','nt1','nt2','nt3','nt4','nt5','nt6','nt7','space_type')
colnames(light_wood_lum) <- c('target','nt1','nt2','nt3','nt4','nt5','nt6','nt7','space_type')
light_wood_lum <- as.data.frame(light_wood_lum) %>%
cbind(tmp_cond$type)
colnames(light_wood_lum) <- c('target','nt1','nt2','nt3','nt4','nt5','nt6','nt7','space_type')
light_wood_cont <- as.data.frame(light_wood_cont) %>%
cbind(tmp_cond$type)
colnames(light_wood_cont) <- c('target','nt1','nt2','nt3','nt4','nt5','nt6','nt7','space_type')
View(light_layout_lum)
